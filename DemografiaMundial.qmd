---
title: "Demografía Mundial"
author: "Carla Martínez, Patricia Mateu y Margalida Verd"
format: html
editor: visual
---

## Introducción

Este proyecto recoge datos poblacionales de los países del mundo, tomados en 3 años consecutivos (del 2018 al 2020) y pretende estudiarlos y analizarlos a nivel continental para ver si existen diferencias significativas entre continentes.

Para ello, analizaremos cada continente individualmente y nos centraremos en entender las diferencias que puedan haber; es decir, aportar información histórica, si se da el caso, que pueda explicar los aumentos o decrementos de los valores demográficos.

Los datos utilizados se han sacado de los siguientes enlaces:

-   [Global Population Trends](https://www.kaggle.com/datasets/alitaqi000/global-population-trends2016-2022)

-   [World Population](https://www.kaggle.com/datasets/iamsouravbanerjee/world-population-dataset)

## Descripción variables

Ahora que ya tenemos bien construida nuestra base de datos, hagamos una breve explicación de las distintas variables que lo conforman:

-   $\textit{País}$ nos indica el país de estudio.
-   $\textit{Continente}$ variable que nos indica a continente pertenece cada uno de los países.
-   $\textit{Area_km2}$ se refiere al área en $km^2$ que ocupa cada uno de los países.
-   $\textit{Año}$ nos expone a que año fue tomada la muestra, ya que observamos que de cada país tenemos 4 muestras distintas que vienen tomadas desde el 2018 hasta el 2021.
-   $\textit{Pob_total}$ nos indica en número total de habitantes en cada país.
-   $\textit{Pob_urbana}$ y $\textit{Pob_rural}$ que se refieren al numéro de habitantes que residen en una localidad urbana y en una rural, respectivamente.
-   $\textit{Densidad}$ que nos indica la densidad de cada país; recordemos que la densidad no és más que un indicador que nos permite saber cuánta población habita en una zona territorial. Ésta viene dada por: $\textit{Densidad} =\frac{\textit{Pob_total}}{\textit{Area_km2}}$
-   $\textit{Esp_vida}$ presenta la edad media que pueden alcanzar los individuos de cada país.
-   $\textit{Natalidad}$ número de personas que nacen en un año y país determinado, por 1000 habitantes estimados a mitad de año.
-   $\textit{Mortalidad}$ número de personas que fallecen en un año y país determinado, por 1000 habitantes estimados a mitad de año.
-   $\textit{Fertilidad}$ esla tasa de fertilidad total que representa el número de hijos que tendría una mujer si viviera hasta el final de sus años fértiles y tuviera hijos de acuerdo con las tasas de fertilidad específicas por edad del año indicado.
-   $\textit{Mortalidad_infantil}$ número total de defunciones de menores de un año de vida, por cada 1000 nacidos vivos.
-   $\textit{Crecimiento}$ es la diferencia entre el número de nacimientos y el de muertes totales.

""" - analisis a nivel continental desde el 2018 al 2020 - ver si hay diferencias significativas por continentes - en cada continente analizar los paises que más difieren del resto - ver si en el 2020 han habido cambios significativos - ver si en los paises con más diferencias en mortalidad de un año al otro vienen dados por un evento significativo - ver si la paz afecta en la esperanza de vida y en la natalidad ejemplo Dinamarca """

## Carga de datos y limpieza

Empezamos con la carga de los dataframes que usaremos y veamos la estructura del nuevo tibble.

```{r, warning=FALSE,message=FALSE}
library(tidyverse)

# Cargamos el primer dataframe
global_population = read_csv("Global Population Trends(2016-2022).csv", show_col_types = FALSE) 

# Del segundo dataframe seleccionamos las variables que nos interesan para el estudio

data = read_csv("world_population.csv",show_col_types = FALSE)
world_data <- data %>% 
  select(3,5,14) %>% rename(Country= "Country/Territory", Area_km2 = "Area (km²)")   

# Unimos los dos dataframes y creamos el tibble que usaremos para el estudio
world_population = left_join(global_population,world_data, by = "Country")

world_population %>% 
  glimpse()

```

Ahora, procedemos con la limpieza; para empezar, renombramos las columnas con la función `rename()`, ya que sus nombres estaban en inglés, y cambiamos la posición de algunas variables con la función `relocate()`, para que las variables sigan un orden lógico.

```{r, warning=FALSE, message=FALSE}
world_population <- world_population %>% 
  rename(Pais = "Country", 
         Año = "Year", 
         Pob_total = "Total Population", 
         Pob_urbana = "Urban Population", 
         Pob_rural = "Rural Population", 
         Densidad = "Population Density", 
         Esp_vida = "Life Expectancy", 
         Natalidad = "Birth Rate", 
         Mortalidad = "Death Rate", 
         Fertilidad = "Fertility Rate", 
         Mortalidad_infantil = "Infant Mortality Rate", 
         Crecimiento = "Growth Rate", 
         Continente = "Continent") %>% 
  relocate(Continente, .after = Pais) %>% 
  relocate(Area_km2, .after = Continente) %>% 
  relocate(Mortalidad_infantil, .after = Mortalidad) 

```

Además, cambiaremos el tipo de algunas variables ya que queremos que se ajusten a las necesidades del estudio. Para ello, utilizamos la función `mutate()`.

```{r, warning=FALSE, message=FALSE}
world_population <- world_population %>% 
  mutate(Año = as.character(Año)) %>% 
  mutate(Pob_total = as.numeric(gsub("," , "", Pob_total, fixed = TRUE))) %>%
  mutate(Pob_rural = as.numeric(gsub("," , "", Pob_rural, fixed = TRUE))) %>%
  mutate(Pob_urbana = as.numeric(gsub("," , "", Pob_urbana, fixed = TRUE))) %>% 
  mutate(Densidad = as.integer(Densidad)) %>% 
  mutate(Esp_vida = as.integer(Esp_vida)) %>% 
  mutate(Fertilidad = as.numeric(Fertilidad)) %>% 
  mutate(Mortalidad_infantil = as.numeric(Mortalidad_infantil)) %>% 
  mutate(Crecimiento = as.integer(Crecimiento))
  
```

Visualicemos el conjunto de datos que presentan algún valor NA.

```{r, warning=FALSE, message=FALSE}
world_population %>% 
  group_by(Año) %>% 
  summarise_all(funs(sum(is.na(.))))
```

Como vemos, tenemos bastantes datos faltantes en los años 2017 y 2021; por eso, reduciremos nuestro estudio entre los años 2018 y 2020. Utilizaremos la función `filter()` para eliminar los dos años de nuestro tibble.

```{r,warning=FALSE,message=FALSE}
world_population <- world_population %>% 
  filter(Año == 2018 |Año == 2019 |Año == 2020  ) 
View(world_population)
```

Ahora, trataremos particularmente los datos NA de las variables *Contiente* y *Area_km2*, ya que son las variables que hemos añadido de otro dataframe. En este caso, rellenaremos manualmente. La información con la que hemos completado estos valores se han sacado de las correspondientes páginas web de *Wikipedia* de cada uno de los países.

```{r}
world_population$Continente[19:21] = "North America"
world_population$Area_km2[19:21] = 442

world_population$Continente[73:75] = "Europe"
world_population$Area_km2[73:75] = 51197

world_population$Continente[97:99] = "Africa"
world_population$Area_km2[97:99] = 4033

world_population$Continente[151:153] = "Africa"
world_population$Area_km2[151:153] = 2344858

world_population$Continente[118:120] = "Europe"
world_population$Area_km2[118:120] = 198

world_population$Continente[277:279] = "Europe"
world_population$Area_km2[277:279] = 572

world_population$Continente[304:306] = "Europe"
world_population$Area_km2[304:306] = 10887

world_population$Continente[310:312] = "Asia"
world_population$Area_km2[310:312] = 199951

world_population$Continente[313:315] = "Asia"
world_population$Area_km2[313:315] = 236800

world_population$Continente[340:342] = "Asia"
world_population$Area_km2[340:342] = 28

world_population$Continente[472:474] = "Africa"
world_population$Area_km2[472:474] = 342000

world_population$Continente[490:492] = "Africa"
world_population$Area_km2[490:492] = 964

world_population$Continente[511:513] = "Europe"
world_population$Area_km2[511:513] = 34

world_population$Continente[514:516] = "Europe"
world_population$Area_km2[514:516] = 49035

world_population$Continente[541:543] = "North America"
world_population$Area_km2[541:543] = 269

world_population$Continente[544:546] = "South America"
world_population$Area_km2[544:546] = 616

world_population$Continente[547:549] = "Europe"
world_population$Area_km2[547:549] = 53

world_population$Continente[550:552] = "North America"
world_population$Area_km2[550:552] = 389

world_population$Continente[565:567] = "Asia"
world_population$Area_km2[565:567] = 185180

world_population$Continente[586:588] = "South America"
world_population$Area_km2[586:588] = 5128

world_population$Continente[598:600] = "North America"
world_population$Area_km2[598:600] = 948

world_population$Continente[604:606] = "Asia"
world_population$Area_km2[604:606] = 83600

world_population$Continente[634:636] = "North America"
world_population$Area_km2[634:636] = 346

world_population$Continente[637:639] = "Asia"
world_population$Area_km2[637:639] = 5860

```

Visualizamos la estructura del dataframe resultante de la limpieza:

```{r}
world_population <- world_population %>%
  glimpse()
```

¡¡¡¡¡¡¡¡¡¡¡¡¡¡¡¡TENEMOS QUE PENSAR QUE HACER CON LOS NA!!!!!!!!!!!!!!!!!!!

```{r}

#View(world_population)
#data1 <- world_population %>% 
  #filter(., is.na(Continente)) %>% 
  #filter(., Año == 2018) %>% 
  #glimpse()
#View(data1)

```

## Análisis multivariante exploratorio

idees: - estudi per any - estudi per continent

Una vez hecha la limpieza, empezamos con el análisis multivariante. Debido a que nos interesa realizar un estudio por continentes y por año, utilizaremos la función `group_by()`, para poder agrupar nuestros datos en base a nuestros intereses. Primero, veamos la población total por continentes en los diferentes años:

```{r}

world_population %>%  
  group_by(Continente,Año) %>% 
  summarise("Población total" = sum(Pob_total), "Natalidad media" = mean(Natalidad), "Mortalidad media" = mean(Mortalidad),  "Esperanza media de Vida" = mean(Esp_vida)) %>% 
  filter(Año =="2018") 

#  summarise("Población total" = sum(Pob_total))
```

Vemos que el contiente con más población es Asia, seguido de África; en cambio, el continente menos poblado es Oceanía.

Vamos a visualizar ahora los valores medios, por continente y año de las diferentes variables del estudio. Empezamos con la natalidad:

```{r}
nat<- world_population %>% 
  group_by(Continente, Año) %>% 
  drop_na() %>% 
  summarise(med = round(mean(Natalidad), digits = 5),Natalidad)

ggplot(nat, aes(x=Continente, y = Natalidad ,fill = Año)) + 
  geom_boxplot() + 
  geom_point(mapping= (aes(x = Continente, y = med, color = "white")))+
  guides(fill = guide_legend(title = "Año")) +
  labs(x="Continente", y="Número de paises") +
  labs(x="Continente", y="Natalidad") +
  theme_bw() +
  theme(axis.text = element_text(size=8),
        axis.title = element_text(size=12, face = "bold"),
        legend.title = element_text(size=12, face = "bold")) 
#Las medias no recaen encima de su año :(
```

Analicemos bien estos resultados. Como vemos, llama la atención los valores que presenta Europa. Como vemos a continuación, la media de personas que nacen por año en este continente es realativamente baja: aproximadamente 10 recién nacidos por cada 1000 habitantes.

```{r}
View(world_population)
world_population %>% 
  filter(Continente == "Europe") %>% 
  group_by(Año) %>% 
  select(Natalidad) %>% 
  summarise( media = mean(Natalidad))
```

De la misma forma, África presenta los valores de natalidad más altos; en concreto

```{r}
world_population %>% 
  filter(Continente == "Africa") %>% 
  group_by(Año) %>% 
  select(Natalidad) %>% 
  summarise( media = mean(Natalidad))
```

Como vemos, los valores difieren significativamente de los de Europa. No vemos diferencias significativas por años en ningún continente.

Continuamos con la mortalidad:

```{r}
mort<- world_population %>% 
  group_by(Continente, Año) %>% 
  drop_na() %>% 
  summarise(med = round(mean(Mortalidad), digits = 5),Mortalidad)

ggplot(mort, aes(x=Continente, y = Mortalidad ,fill = Año)) + 
  geom_boxplot() + 
  geom_point(mapping= (aes(x = Continente, y = med, color = "white")))+
  guides(fill = guide_legend(title = "Año")) +
  labs(x="Continente", y="Mortalidad") +
  theme_bw() +
  theme(axis.text = element_text(size=8),
        axis.title = element_text(size=12, face = "bold"),
        legend.title = element_text(size=12, face = "bold")) 
```

Igual que antes, Europa es el continente con el índice de mortalidad más alto. Fijémonos también en los diferentes valores por años:

```{r}
world_population %>% 
  filter(Continente == "Europe") %>% 
  group_by(Año) %>% 
  select(Mortalidad) %>% 
  summarise( media = mean(Mortalidad))
```

En 2020, aumenta el número de fallecidos. Como vemos, en la mayoría de continentes ocurre lo mismo.

Vamos ahora con la mortalidad infantil.

```{r}
mort_inf<- world_population %>% 
  group_by(Continente, Año) %>% 
  drop_na() %>% 
  summarise(med = round(mean(Mortalidad_infantil), digits = 5),Mortalidad_infantil)

ggplot(mort_inf, aes(x=Continente, y = Mortalidad_infantil ,fill = Año)) + 
  geom_boxplot() + 
  geom_point(mapping= (aes(x = Continente, y = med, color = "white")))+
  guides(fill = guide_legend(title = "Año")) +
  labs(x="Continente", y="Mortalidad infantil") +
  theme_bw() +
  theme(axis.text = element_text(size=8),
        axis.title = element_text(size=12, face = "bold"),
        legend.title = element_text(size=12, face = "bold"))
```

África es el continente con más mortalidad infantil, con diferencia. Ilustremos estos valores:

```{r}
world_population %>% 
  filter(Continente == "Africa") %>% 
  group_by(Año) %>% 
  select(Mortalidad_infantil) %>% 
  summarise( media = mean(Mortalidad_infantil))
```

En concreto, mueren al año 43 niños/niñas por cada 1000 nacimientos. Teniendo en cuenta el número de nacimientos en este continente, esto equivale a $\textbf{1.5 millones de muertes infantiles cada año}$.

Por otro lado, Europa presenta unos valores mínimos en mortalidad infantil:

```{r}
world_population %>% 
  filter(Continente == "Europe") %>% 
  group_by(Año) %>% 
  drop_na() %>% 
  select(Mortalidad_infantil) %>% 
  summarise( media = mean(Mortalidad_infantil))
```

Por último, veamos la fertilidad:

```{r}
mort_inf<- world_population %>% 
  group_by(Continente, Año) %>% 
  drop_na() %>% 
  summarise(med = round(mean(Fertilidad), digits = 5),Fertilidad)

ggplot(mort_inf, aes(x=Continente, y = Fertilidad ,fill = Año)) + 
  geom_boxplot() + 
  geom_point(mapping= (aes(x = Continente, y = med, color = "white")))+
  guides(fill = guide_legend(title = "Año")) +
  labs(x="Continente", y="Fertilidad") +
  theme_bw() +
  theme(axis.text = element_text(size=8),
        axis.title = element_text(size=12, face = "bold"),
        legend.title = element_text(size=12, face = "bold"))
```

$\textit{Fertilidad}$ es la tasa de fertilidad total que representa el número de hijos que tendría una mujer si viviera hasta el final de sus años fértiles y tuviera hijos de acuerdo con las tasas de fertilidad específicas por edad del año indicado.

Observemos que la mayor tasa de fertilidad total está en África, veamos los datos

```{r}
world_population %>% 
  filter(Continente == "Africa") %>% 
  group_by(Año) %>% 
  select(Fertilidad) %>% 
  summarise( media = mean(Fertilidad))
```

Entonces, nos encontramos que de media, cada persona gestante de África, tendría 4 hijos de acuerdo con la tasa de fertilidad específica por edad.

Además, observemos que Europa es el continente con menor tasa de fertilidad. Vamos a ver cuántos hijos de media tendrían las personas gestantes de este continente.

```{r}
world_population %>% 
  filter(Continente == "Europe") %>% 
  group_by(Año) %>% 
  drop_na() %>% 
  select(Fertilidad) %>% 
  summarise( media = mean(Fertilidad))
```

```{r}
library(ggplot2)
library(dplyr)
library(plotly)
library(viridis)
library(hrbrthemes)


data_2019 <- world_population %>% 
  filter(Año == 2019) %>% 
  select(-Año)

p_19 <- data_2019 %>% 
  mutate(Pob = round(Pob_total /1000000,2)) %>% 
  arrange(desc(Pob)) %>% 
  mutate(country = factor(Pais, Pais)) %>% 
  mutate(text= paste("Pais: ", country, "\nPoblación (M):", Pob, "\nCrecimiento: ", Crecimiento)) %>%
  ggplot(aes(x=Pob_total, y = Crecimiento, size= Pob_total, color = Continente, text = text)) +
  geom_point(alpha = 0.7) +
  scale_size(range = c(1.4, 19),name="Population (M)") +
    scale_color_viridis(discrete=TRUE, guide=FALSE) +
    theme_ipsum() +
    theme(legend.position="right")

pp_19 <- ggplotly(p_19, tooltip = "text")
pp_19

```

## Estimación y correlaciones

```{r}
world_population <- world_population %>% 
  mutate(dens = round(Pob_total/Area_km2,2), .keep = "all", .after = Densidad) 
View(world_population)
```

```{r}
library(GGally)
a_europe <- world_population %>% 
  filter(Continente == "Europe") %>% 
  select(4,11:13) %>% 
  drop_na()

ggpairs(a_europe,mapping=ggplot2::aes(colour = Año),
        upper = list(continuous = wrap("cor", size = 3)))

a_asia <- world_population %>% 
  filter(Continente == "Asia") %>% 
  filter(Año == 2019) %>% 
  select(10:13) %>% 
  drop_na()

ggpairs(a_asia)

a_africa <- world_population %>% 
  filter(Continente == "Africa") %>% 
  filter(Año == 2019) %>% 
  select(10:13) %>% 
  drop_na()

ggpairs(a_africa)

a_north_am <- world_population %>% 
  filter(Continente == "North America") %>% 
  filter(Año == 2019) %>% 
  select(10:13) %>% 
  drop_na()

ggpairs(a_north_am)

a_oceania <- world_population %>% 
  filter(Continente == "Oceania") %>% 
  filter(Año == 2019) %>% 
  select(10:13) %>% 
  drop_na()

ggpairs(a_oceania)

a_south_am <- world_population %>% 
  filter(Continente == "South America") %>% 
  filter(Año == 2019) %>% 
  select(10:13) %>% 
  drop_na()

ggpairs(a_south_am)



```

## Estimación y correlaciones

Estimación del vector de medias por continentes:

```{r}

world_population %>% 
  group_by(Continente, Año) %>% 
  summarise("Población media" = mean(Pob_total), "Población rural media" = mean(Pob_rural), "Población urbana media" = mean (Pob_urbana), "Densidad media" = mean(Densidad), "Esperanza media de vida" = mean(Esp_vida), "Natalidad media" = mean(Natalidad), "Mortalidad media" = mean(Mortalidad), "Mortalidad infantil media" = mean(Mortalidad_infantil), "Fertilidad media"= mean(Fertilidad)) 

world_population %>% 
  group_by(Continente, Año) %>% 
  summarise("Natalidad media" = mean(Natalidad), "Mortalidad media" = mean(Mortalidad)) 


```

```{r}

boxplot(world_population$Mortalidad ~ world_population$Continente, xlab = "Continente",  ylab = "Mortalidad", )
boxplot(world_population$Mortalidad_infantil ~ world_population$Continente, xlab = "Continente", ylab = "Mortalidad Infantil")
boxplot(world_population$Densidad ~ world_population$Continente, xlab = "Continente", ylab = "Densidad")
boxplot(world_population$Natalidad ~ world_population$Continente, xlab = "Continente", ylab = "Natalidad")
boxplot(world_population$Esp_vida ~ world_population$Continente, xlab = "Continente", ylab = "Esperanza de vida")



```

```{r}
world_population %>%   
  group_by(Continente,Año) %>% 
  drop_na() %>% 
  summarise("Población urbana" = sum(Pob_urbana), "Población rural" = sum(Pob_rural))
```

```{r}
sep_africa <- world_population %>% 
  filter(Continente == "South America") %>% 
  filter(Año == 2018) %>% 
  select(6:7) %>% 
  summarise("Población urbana" = sum(Pob_urbana), "Población rural" = sum(Pob_rural))

data <-  data.frame(
  group=c("Población urbana","Población rural" ),
  value=c(357982255, 68241620))
View(data)

ggplot(data, aes(x="", y=value, fill=group)) +
  geom_bar(stat="identity", width=1, color="white") +
  coord_polar("y", start=0) +
  theme_void() # remove background, grid, numeric labels
```

## Conclusiones
