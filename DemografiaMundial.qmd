---
title: "Demografía Mundial"
author: "Carla Martínez, Patricia Mateu y Margalida Verd"
format: html
editor: visual
---

## Introducción

Este proyecto recoge datos poblacionales de los países del mundo, tomados en 3 años consecutivos (del 2018 al 2020) y pretende estudiarlos y analizarlos a nivel continental para ver si existen diferencias significativas entre continentes.

Para ello, analizaremos cada continente individualmente y nos centraremos en entender las diferencias que puedan haber; es decir, aportar información histórica, si se da el caso, que pueda explicar los aumentos o decrementos de los valores demográficos.

Los datos utilizados se han sacado de los siguientes enlaces:

-   [Global Population Trends](https://www.kaggle.com/datasets/alitaqi000/global-population-trends2016-2022)

-   [World Population](https://www.kaggle.com/datasets/iamsouravbanerjee/world-population-dataset)


"""
- analisis a nivel continental desde el 2018 al 2020 
- ver si hay diferencias significativas por continentes
- en cada continente analizar los paises que más difieren del resto 
- ver si en el 2020 han habido cambios significativos 
- ver si en los paises con más diferencias en mortalidad de un año al otro vienen dados por un evento significativo 
- ver si la paz afecta en la esperanza de vida y en la natalidad ejemplo Dinamarca
"""

## Carga de datos y limpieza

Empezamos con la carga de los dataframes que usaremos y veamos la estructura del nuevo tibble.

```{r, warning=FALSE,message=FALSE}
library(tidyverse)

# Cargamos el primer dataframe
global_population = read_csv("Global Population Trends(2016-2022).csv", show_col_types = FALSE) 

# Del segundo dataframe seleccionamos las variables que nos interesan para el estudio

data = read_csv("world_population.csv",show_col_types = FALSE)
world_data <- data %>% 
  select(3,5,14) %>% rename(Country= "Country/Territory", Area_km2 = "Area (km²)")   
# Unimos los dos dataframes y creamos el tibble que usaremos para el estudio
world_population = left_join(global_population,world_data, by = "Country")

world_population %>% 
  glimpse()

```

Ahora, procedemos con la limpieza; para empezar, renombramos las columnas con la función `rename()`, ya que sus nombres estaban en inglés, y cambiamos la posición de algunas variables con la función `relocate()`, para que las variables sigan un orden lógico.

```{r, warning=FALSE, message=FALSE}
world_population <- world_population %>% 
  rename(Pais = "Country", 
         Año = "Year", 
         Pob_total = "Total Population", 
         Pob_urbana = "Urban Population", 
         Pob_rural = "Rural Population", 
         Densidad = "Population Density", 
         Esp_vida = "Life Expectancy", 
         Natalidad = "Birth Rate", 
         Mortalidad = "Death Rate", 
         Fertilidad = "Fertility Rate", 
         Mortalidad_infantil = "Infant Mortality Rate", 
         Crecimiento = "Growth Rate", 
         Continente = "Continent") %>% 
  relocate(Continente, .after = Pais) %>% 
  relocate(Area_km2, .after = Continente) %>% 
  relocate(Mortalidad_infantil, .after = Mortalidad) 

```

Además, cambiaremos el tipo de algunas variables ya que queremos que se ajusten a las necesidades del estudio. Para ello, utilizamos la función `mutate()`.

```{r, warning=FALSE, message=FALSE}
world_population <- world_population %>% 
  mutate(Año = as.character(Año)) %>% 
  mutate(Pob_total = as.numeric(gsub("," , "", Pob_total, fixed = TRUE))) %>%
  mutate(Pob_rural = as.numeric(gsub("," , "", Pob_rural, fixed = TRUE))) %>%
  mutate(Pob_urbana = as.numeric(gsub("," , "", Pob_urbana, fixed = TRUE))) %>% 
  mutate(Densidad = as.integer(Densidad)) %>% 
  mutate(Esp_vida = as.integer(Esp_vida)) %>% 
  mutate(Fertilidad = as.numeric(Fertilidad)) %>% 
  mutate(Mortalidad_infantil = as.numeric(Mortalidad_infantil)) %>% 
  mutate(Crecimiento = as.integer(Crecimiento))
  
```

Visualicemos el conjunto de datos que presentan algún valor NA.

```{r, warning=FALSE, message=FALSE}
world_population %>% 
  group_by(Año) %>% 
  summarise_all(funs(sum(is.na(.))))

```

Como vemos, tenemos bastantes datos faltantes en los años 2017 y 2021; por eso, reduciremos nuestro estudio entre los años 2018 y 2020. Utilizaremos la función `filter()` para eliminar los dos años de nuestro tibble.

```{r,warning=FALSE,message=FALSE}
world_population <- world_population %>% 
  filter(Año == 2018 |Año == 2019 |Año == 2020 ) 
```

Ahora, trataremos particularmente los datos NA de las variables *Contiente* y *Area_km2*, ya que son las variables que hemos añadido de otro dataframe. En este caso, rellenaremos manualmente estos datos con la función `fix()`. La información con la que hemos completado estos valores se han sacado de: ??????????????

Visualizamos la estructura del dataframe resultante de la limpieza:

```{r}
world_population <- world_population %>%
  glimpse()
View(world_population)
```

## Análisis multivariante exploratorio

## Estimación y correlaciones

## Conclusiones
